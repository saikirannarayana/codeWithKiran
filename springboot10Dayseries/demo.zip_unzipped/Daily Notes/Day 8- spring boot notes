Day 8 Notes: Spring Boot â€“ Error Handling and Response Management
1. Custom Exception Handling
@ControllerAdvice: Use this annotation to handle exceptions globally across controllers.
@ExceptionHandler: Define methods to handle specific exceptions.
ResponseEntity: Use for crafting custom responses with status codes.
2. Exception Handling with JPA
EntityNotFoundException: Handle cases where requested entities are not found in the database.
3. ResponseEntity Usage
Constructor: new ResponseEntity<>(body, status)
Builder: ResponseEntity.status(HttpStatus.NOT_FOUND).body(body)
4. Request Parameters
@PathVariable: Use for values within the URI path.
Example: /users/{id}
@RequestParam: Use for query parameters in the URL.
Example: /users?name=John
5. Annotations
@ResponseStatus: Set the HTTP status code for responses.
@ResponseBody: Indicates that the return value of a method should be bound to the web response body.
6. Logging and H2 Database
Logging: Use for debugging and tracking application behavior.
H2 Database: Useful for in-memory database testing.
7. Multiple Controllers and @ControllerAdvice
Single @ControllerAdvice: Can be used to handle exceptions across multiple controllers.
